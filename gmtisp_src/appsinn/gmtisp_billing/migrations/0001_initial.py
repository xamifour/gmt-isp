# Generated by Django 4.2.9 on 2024-08-17 21:19

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import openwisp_users.mixins
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BandwidthSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Bandwidth determines how much traffic can pass through, 5Mbps means, user can transmit data up to a capacity/speed 5Mbps",
                        max_length=67,
                        null=True,
                        verbose_name="Bandwidth Name",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[
                            (1, "Critical"),
                            (2, "High"),
                            (3, "Important"),
                            (4, "Medium"),
                            (5, "Low"),
                            (6, "Minor"),
                            (7, "Trivial"),
                        ]
                    ),
                ),
            ],
            options={
                "verbose_name": "Bandwidth Settings",
                "verbose_name_plural": "Bandwidth Settings",
                "abstract": False,
                "swappable": "GMTISP_BILLING_BANDWIDTHSETTINGS_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="BillingInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="modified"
                    ),
                ),
                (
                    "tax_number",
                    models.CharField(
                        blank=True, db_index=True, max_length=67, verbose_name="VAT ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=67, verbose_name="name"),
                ),
                ("street", models.CharField(max_length=67, verbose_name="street")),
                ("zipcode", models.CharField(max_length=67, verbose_name="zip code")),
                ("city", models.CharField(max_length=67, verbose_name="city")),
                (
                    "country",
                    django_countries.fields.CountryField(
                        max_length=2, verbose_name="country"
                    ),
                ),
                (
                    "shipping_name",
                    models.CharField(
                        blank=True,
                        help_text="optional",
                        max_length=67,
                        verbose_name="name (shipping)",
                    ),
                ),
                (
                    "shipping_street",
                    models.CharField(
                        blank=True,
                        help_text="optional",
                        max_length=67,
                        verbose_name="street (shipping)",
                    ),
                ),
                (
                    "shipping_zipcode",
                    models.CharField(
                        blank=True,
                        help_text="optional",
                        max_length=67,
                        verbose_name="zip code (shipping)",
                    ),
                ),
                (
                    "shipping_city",
                    models.CharField(
                        blank=True,
                        help_text="optional",
                        max_length=67,
                        verbose_name="city (shipping)",
                    ),
                ),
                (
                    "shipping_country",
                    django_countries.fields.CountryField(
                        blank=True,
                        help_text="optional",
                        max_length=2,
                        verbose_name="country (shipping)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Billing info",
                "verbose_name_plural": "Billing infos",
                "abstract": False,
                "swappable": "GMTISP_BILLING_BILLINGINFO_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="modified"
                    ),
                ),
                ("number", models.IntegerField(db_index=True)),
                ("full_number", models.CharField(max_length=67)),
                (
                    "type",
                    models.IntegerField(
                        choices=[
                            (1, "Invoice"),
                            (2, "Invoice Duplicate"),
                            (3, "Order confirmation"),
                        ],
                        db_index=True,
                        default=1,
                    ),
                ),
                ("issued", models.DateField(db_index=True)),
                (
                    "issued_duplicate",
                    models.DateField(blank=True, db_index=True, null=True),
                ),
                (
                    "selling_date",
                    models.DateField(blank=True, db_index=True, null=True),
                ),
                ("payment_date", models.DateField(db_index=True)),
                ("unit_price_net", models.DecimalField(decimal_places=2, max_digits=7)),
                ("quantity", models.IntegerField(default=1)),
                ("total_net", models.DecimalField(decimal_places=2, max_digits=7)),
                ("total", models.DecimalField(decimal_places=2, max_digits=7)),
                ("tax_total", models.DecimalField(decimal_places=2, max_digits=7)),
                (
                    "tax",
                    models.DecimalField(
                        blank=True,
                        db_index=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                    ),
                ),
                (
                    "rebate",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=4
                    ),
                ),
                ("currency", models.CharField(default="EUR", max_length=3)),
                ("item_description", models.CharField(max_length=67)),
                (
                    "buyer_name",
                    models.CharField(blank=True, max_length=67, verbose_name="Name"),
                ),
                (
                    "buyer_street",
                    models.CharField(blank=True, max_length=67, verbose_name="Street"),
                ),
                (
                    "buyer_zipcode",
                    models.CharField(
                        blank=True, max_length=67, verbose_name="Zip code"
                    ),
                ),
                (
                    "buyer_city",
                    models.CharField(blank=True, max_length=67, verbose_name="City"),
                ),
                (
                    "buyer_country",
                    django_countries.fields.CountryField(
                        blank=True, default="PL", max_length=2, verbose_name="Country"
                    ),
                ),
                (
                    "buyer_tax_number",
                    models.CharField(
                        blank=True, max_length=67, verbose_name="TAX/VAT number"
                    ),
                ),
                (
                    "shipping_name",
                    models.CharField(blank=True, max_length=67, verbose_name="Name"),
                ),
                (
                    "shipping_street",
                    models.CharField(blank=True, max_length=67, verbose_name="Street"),
                ),
                (
                    "shipping_zipcode",
                    models.CharField(
                        blank=True, max_length=67, verbose_name="Zip code"
                    ),
                ),
                (
                    "shipping_city",
                    models.CharField(blank=True, max_length=67, verbose_name="City"),
                ),
                (
                    "shipping_country",
                    django_countries.fields.CountryField(
                        blank=True, default="PL", max_length=2, verbose_name="Country"
                    ),
                ),
                ("require_shipment", models.BooleanField(db_index=True, default=False)),
                ("issuer_name", models.CharField(max_length=67, verbose_name="Name")),
                (
                    "issuer_street",
                    models.CharField(max_length=67, verbose_name="Street"),
                ),
                (
                    "issuer_zipcode",
                    models.CharField(max_length=67, verbose_name="Zip code"),
                ),
                ("issuer_city", models.CharField(max_length=67, verbose_name="City")),
                (
                    "issuer_country",
                    django_countries.fields.CountryField(
                        default="PL", max_length=2, verbose_name="Country"
                    ),
                ),
                (
                    "issuer_tax_number",
                    models.CharField(
                        blank=True, max_length=67, verbose_name="TAX/VAT number"
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice",
                "verbose_name_plural": "Invoices",
                "abstract": False,
                "swappable": "GMTISP_BILLING_INVOICE_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="modified"
                    ),
                ),
                ("flat_name", models.CharField(blank=True, max_length=67, null=True)),
                (
                    "completed",
                    models.DateTimeField(
                        blank=True, db_index=True, null=True, verbose_name="completed"
                    ),
                ),
                (
                    "plan_extended_from",
                    models.DateField(
                        blank=True,
                        help_text="The plan was extended from this date",
                        null=True,
                        verbose_name="plan extended from",
                    ),
                ),
                (
                    "plan_extended_until",
                    models.DateField(
                        blank=True,
                        help_text="The plan was extended until this date",
                        null=True,
                        verbose_name="plan extended until",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        max_digits=7,
                        verbose_name="amount",
                    ),
                ),
                (
                    "tax",
                    models.DecimalField(
                        blank=True,
                        db_index=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="tax",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="currency"
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "new"),
                            (2, "completed"),
                            (3, "not valid"),
                            (4, "canceled"),
                            (5, "returned"),
                        ],
                        default=1,
                        verbose_name="status",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
                "ordering": ("-created",),
                "abstract": False,
                "swappable": "GMTISP_BILLING_ORDER_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=67, verbose_name="name")),
                ("slug", models.SlugField(max_length=67, verbose_name="slug")),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="description"
                    ),
                ),
                (
                    "available",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Is still available for purchase",
                        verbose_name="Available:",
                    ),
                ),
                (
                    "visible",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Is visible in current offer",
                        verbose_name="Visible:",
                    ),
                ),
                (
                    "requires_payment",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="If this flag is enabled, it means that you are required to perform a payment.",
                        verbose_name="Requires payment:",
                    ),
                ),
                (
                    "rollover_allowed",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Data purchasing now will be added to your remaining data, if you have any",
                        verbose_name="Allow rollover:",
                    ),
                ),
                (
                    "plan_setup_cost",
                    models.DecimalField(
                        blank=True,
                        db_index=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Plan Setup Cost",
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True,
                        help_text="Optional link to page with more information (for clickable pricing table headers)",
                    ),
                ),
                (
                    "plan_class",
                    models.CharField(
                        choices=[
                            ("Bandwidth", "Bandwidth"),
                            ("Data", "Data"),
                            ("Time", "Time"),
                        ],
                        default="Data",
                        max_length=16,
                        verbose_name="Plan Class:",
                    ),
                ),
                (
                    "plan_type",
                    models.CharField(
                        choices=[("Prepaid", "Prepaid"), ("Postpaid", "Postpaid")],
                        default="Prepaid",
                        max_length=16,
                        verbose_name="Plan Type:",
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True, editable=False, null=True, verbose_name="Rating"
                    ),
                ),
                (
                    "default",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Both 'Unknown' and 'No' means that the plan is not default",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan",
                "verbose_name_plural": "Plans",
                "abstract": False,
                "swappable": "GMTISP_BILLING_PLAN_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PlanBandwidthSettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="modified"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="5Mbps",
                        max_length=67,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "rate_limit_up",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="Rate limit up",
                    ),
                ),
                (
                    "rate_limit_down",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="Rate limit down",
                    ),
                ),
                (
                    "burst_rate_up",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="Burst rate up",
                    ),
                ),
                (
                    "burst_rate_down",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="Burst rate down",
                    ),
                ),
                (
                    "burst_threshold_up",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="Burst threshold up",
                    ),
                ),
                (
                    "burst_threshold_down",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="Burst threshold down",
                    ),
                ),
                (
                    "min_rate_up",
                    models.CharField(
                        blank=True, max_length=67, null=True, verbose_name="Min rate up"
                    ),
                ),
                (
                    "min_rate_down",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="Min rate down",
                    ),
                ),
                (
                    "burst_time_up",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="Burst time up",
                    ),
                ),
                (
                    "burst_time_down",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="Burst time down",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan bandwidth setting",
                "verbose_name_plural": "Plans bandwidth settings",
                "abstract": False,
                "swappable": "GMTISP_BILLING_PLANBANDWIDTHSETTINGS_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PlanPricing",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="modified"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(db_index=True, decimal_places=2, max_digits=7),
                ),
                ("order", models.IntegerField(default=0)),
                (
                    "has_automatic_renewal",
                    models.BooleanField(
                        default=False,
                        help_text="Use automatic renewal if possible?",
                        verbose_name="auto renewal",
                    ),
                ),
                (
                    "visible",
                    models.BooleanField(
                        default=True,
                        help_text="Is visible in current offer",
                        verbose_name="visible",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan pricing",
                "verbose_name_plural": "Plans pricings",
                "ordering": ("order", "pricing__period"),
                "abstract": False,
                "swappable": "GMTISP_BILLING_PLANPRICING_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PlanQuota",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="modified"
                    ),
                ),
                ("value", models.BigIntegerField(blank=True, default=1, null=True)),
            ],
            options={
                "verbose_name": "Plan quota",
                "verbose_name_plural": "Plans quotas",
                "abstract": False,
                "swappable": "GMTISP_BILLING_PLANQUOTA_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Pricing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=67, verbose_name="name")),
                (
                    "period",
                    models.PositiveIntegerField(
                        blank=True,
                        db_index=True,
                        default=30,
                        null=True,
                        verbose_name="period",
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True,
                        help_text="Optional link to page with more information (for clickable pricing table headers)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pricing",
                "verbose_name_plural": "Pricings",
                "ordering": ("period",),
                "abstract": False,
                "swappable": "GMTISP_BILLING_PRICING_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Quota",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codename",
                    models.CharField(
                        db_index=True,
                        max_length=67,
                        unique=True,
                        verbose_name="codename",
                    ),
                ),
                ("name", models.CharField(max_length=67, verbose_name="name")),
                (
                    "unit",
                    models.CharField(blank=True, max_length=67, verbose_name="unit"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "is_boolean",
                    models.BooleanField(default=False, verbose_name="is boolean"),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        help_text="Optional link to page with more information (for clickable pricing table headers)",
                        max_length=200,
                    ),
                ),
            ],
            options={
                "verbose_name": "Quota",
                "verbose_name_plural": "Quotas",
                "abstract": False,
                "swappable": "GMTISP_BILLING_QUOTA_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="RecurringUserPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="modified"
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Token, that will be used for payment renewal. Depends on used payment provider",
                        max_length=200,
                        null=True,
                        verbose_name="recurring token",
                    ),
                ),
                (
                    "payment_provider",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Provider, that will be used for payment renewal",
                        max_length=200,
                        null=True,
                        verbose_name="payment provider",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True,
                        db_index=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="amount",
                    ),
                ),
                (
                    "tax",
                    models.DecimalField(
                        blank=True,
                        db_index=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="tax",
                    ),
                ),
                ("currency", models.CharField(max_length=3, verbose_name="currency")),
                (
                    "renewal_triggered_by",
                    models.IntegerField(
                        choices=[(1, "other"), (2, "user"), (3, "task")],
                        db_index=True,
                        default=2,
                        help_text="The source of the associated plan's renewal (USER = user-initiated renewal, TASK = autorenew_account-task-initiated renewal, OTHER = renewal is triggered using another mechanism).",
                        verbose_name="renewal triggered by",
                    ),
                ),
                (
                    "_has_automatic_renewal_backup_deprecated",
                    models.BooleanField(
                        db_column="has_automatic_renewal",
                        default=False,
                        help_text="Automatic renewal is enabled for associated plan. If False, the plan renewal can be still initiated by user.",
                        verbose_name="has automatic plan renewal",
                    ),
                ),
                (
                    "token_verified",
                    models.BooleanField(
                        default=False,
                        help_text="The recurring token has been verified by at least one payment to be working.",
                        verbose_name="token has been verified by payment",
                    ),
                ),
                ("card_expire_year", models.IntegerField(blank=True, null=True)),
                ("card_expire_month", models.IntegerField(blank=True, null=True)),
                (
                    "card_masked_number",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="CVV"
                    ),
                ),
            ],
            options={
                "abstract": False,
                "swappable": "GMTISP_BILLING_RECURRINGUSERPLAN_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="UserPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="modified"
                    ),
                ),
                (
                    "expire",
                    models.DateField(
                        blank=True,
                        db_index=True,
                        default=None,
                        null=True,
                        verbose_name="expire",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="active"
                    ),
                ),
            ],
            options={
                "verbose_name": "User plan",
                "verbose_name_plural": "Users plans",
                "abstract": False,
                "swappable": "GMTISP_BILLING_USERPLAN_MODEL",
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                ("variant", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("waiting", "Waiting for confirmation"),
                            ("preauth", "Pre-authorized"),
                            ("confirmed", "Confirmed"),
                            ("rejected", "Rejected"),
                            ("refunded", "Refunded"),
                            ("error", "Error"),
                            ("input", "Input"),
                        ],
                        default="waiting",
                        max_length=10,
                    ),
                ),
                (
                    "fraud_status",
                    models.CharField(
                        choices=[
                            ("unknown", "Unknown"),
                            ("accept", "Passed"),
                            ("reject", "Rejected"),
                            ("review", "Review"),
                        ],
                        default="unknown",
                        max_length=10,
                        verbose_name="fraud check",
                    ),
                ),
                ("fraud_message", models.TextField(blank=True, default="")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("transaction_id", models.CharField(blank=True, max_length=255)),
                ("currency", models.CharField(max_length=10)),
                (
                    "total",
                    models.DecimalField(decimal_places=2, default="0.0", max_digits=9),
                ),
                (
                    "delivery",
                    models.DecimalField(decimal_places=2, default="0.0", max_digits=9),
                ),
                (
                    "tax",
                    models.DecimalField(decimal_places=2, default="0.0", max_digits=9),
                ),
                ("description", models.TextField(blank=True, default="")),
                ("billing_first_name", models.CharField(blank=True, max_length=256)),
                ("billing_last_name", models.CharField(blank=True, max_length=256)),
                ("billing_address_1", models.CharField(blank=True, max_length=256)),
                ("billing_address_2", models.CharField(blank=True, max_length=256)),
                ("billing_city", models.CharField(blank=True, max_length=256)),
                ("billing_postcode", models.CharField(blank=True, max_length=256)),
                ("billing_country_code", models.CharField(blank=True, max_length=2)),
                ("billing_country_area", models.CharField(blank=True, max_length=256)),
                ("billing_email", models.EmailField(blank=True, max_length=254)),
                (
                    "billing_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, region=None
                    ),
                ),
                (
                    "customer_ip_address",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("extra_data", models.TextField(blank=True, default="")),
                ("message", models.TextField(blank=True, default="")),
                ("token", models.CharField(blank=True, default="", max_length=36)),
                (
                    "captured_amount",
                    models.DecimalField(decimal_places=2, default="0.0", max_digits=9),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_fee",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.0"), max_digits=9
                    ),
                ),
                ("autorenewed_payment", models.BooleanField(default=False)),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.GMTISP_BILLING_ORDER_MODEL,
                    ),
                ),
            ],
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
    ]
