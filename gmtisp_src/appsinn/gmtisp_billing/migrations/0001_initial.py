# Generated by Django 4.2.7 on 2024-11-05 14:58

from decimal import Decimal
from django.db import migrations, models
import django.utils.timezone
import django_countries.fields
import openwisp_users.mixins
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BillingInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('tax_number', models.CharField(blank=True, db_index=True, max_length=67, verbose_name='VAT ID')),
                ('name', models.CharField(db_index=True, max_length=67, verbose_name='name')),
                ('street', models.CharField(max_length=67, verbose_name='street')),
                ('zipcode', models.CharField(max_length=67, verbose_name='zip code')),
                ('city', models.CharField(max_length=67, verbose_name='city')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='country')),
                ('shipping_name', models.CharField(blank=True, help_text='optional', max_length=67, verbose_name='name (shipping)')),
                ('shipping_street', models.CharField(blank=True, help_text='optional', max_length=67, verbose_name='street (shipping)')),
                ('shipping_zipcode', models.CharField(blank=True, help_text='optional', max_length=67, verbose_name='zip code (shipping)')),
                ('shipping_city', models.CharField(blank=True, help_text='optional', max_length=67, verbose_name='city (shipping)')),
                ('shipping_country', django_countries.fields.CountryField(blank=True, help_text='optional', max_length=2, verbose_name='country (shipping)')),
            ],
            options={
                'verbose_name': 'Billing info',
                'verbose_name_plural': 'Billing infos',
                'abstract': False,
                'swappable': 'GMTISP_BILLING_BILLINGINFO_MODEL',
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('number', models.IntegerField(db_index=True)),
                ('full_number', models.CharField(max_length=67)),
                ('type', models.IntegerField(choices=[(1, 'Invoice'), (2, 'Invoice Duplicate'), (3, 'Order confirmation')], db_index=True, default=1)),
                ('issued', models.DateField(db_index=True)),
                ('issued_duplicate', models.DateField(blank=True, db_index=True, null=True)),
                ('selling_date', models.DateField(blank=True, db_index=True, null=True)),
                ('payment_date', models.DateField(db_index=True)),
                ('unit_price_net', models.DecimalField(decimal_places=2, max_digits=7)),
                ('quantity', models.IntegerField(default=1)),
                ('total_net', models.DecimalField(decimal_places=2, max_digits=7)),
                ('total', models.DecimalField(decimal_places=2, max_digits=7)),
                ('tax_total', models.DecimalField(decimal_places=2, max_digits=7)),
                ('tax', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=4, null=True)),
                ('rebate', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=4)),
                ('currency', models.CharField(default='EUR', max_length=3)),
                ('item_description', models.CharField(max_length=67)),
                ('buyer_name', models.CharField(blank=True, max_length=67, verbose_name='Name')),
                ('buyer_street', models.CharField(blank=True, max_length=67, verbose_name='Street')),
                ('buyer_zipcode', models.CharField(blank=True, max_length=67, verbose_name='Zip code')),
                ('buyer_city', models.CharField(blank=True, max_length=67, verbose_name='City')),
                ('buyer_country', django_countries.fields.CountryField(blank=True, default='PL', max_length=2, verbose_name='Country')),
                ('buyer_tax_number', models.CharField(blank=True, max_length=67, verbose_name='TAX/VAT number')),
                ('shipping_name', models.CharField(blank=True, max_length=67, verbose_name='Name')),
                ('shipping_street', models.CharField(blank=True, max_length=67, verbose_name='Street')),
                ('shipping_zipcode', models.CharField(blank=True, max_length=67, verbose_name='Zip code')),
                ('shipping_city', models.CharField(blank=True, max_length=67, verbose_name='City')),
                ('shipping_country', django_countries.fields.CountryField(blank=True, default='PL', max_length=2, verbose_name='Country')),
                ('require_shipment', models.BooleanField(db_index=True, default=False)),
                ('issuer_name', models.CharField(max_length=67, verbose_name='Name')),
                ('issuer_street', models.CharField(max_length=67, verbose_name='Street')),
                ('issuer_zipcode', models.CharField(max_length=67, verbose_name='Zip code')),
                ('issuer_city', models.CharField(max_length=67, verbose_name='City')),
                ('issuer_country', django_countries.fields.CountryField(default='PL', max_length=2, verbose_name='Country')),
                ('issuer_tax_number', models.CharField(blank=True, max_length=67, verbose_name='TAX/VAT number')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'abstract': False,
                'swappable': 'GMTISP_BILLING_INVOICE_MODEL',
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('flat_name', models.CharField(blank=True, max_length=67, null=True)),
                ('completed', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='completed')),
                ('plan_extended_from', models.DateField(blank=True, help_text='The plan was extended from this date', null=True, verbose_name='plan extended from')),
                ('plan_extended_until', models.DateField(blank=True, help_text='The plan was extended until this date', null=True, verbose_name='plan extended until')),
                ('amount', models.DecimalField(db_index=True, decimal_places=2, max_digits=7, verbose_name='amount')),
                ('tax', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=4, null=True, verbose_name='tax')),
                ('currency', models.CharField(default='GHS', max_length=3, verbose_name='currency')),
                ('status', models.IntegerField(choices=[(1, 'new'), (2, 'completed'), (3, 'not valid'), (4, 'canceled'), (5, 'returned')], default=1, verbose_name='status')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ('-completed',),
                'abstract': False,
                'swappable': 'GMTISP_BILLING_ORDER_MODEL',
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=67, verbose_name='amount')),
                ('currency', models.CharField(default='GHS', max_length=3, verbose_name='currency')),
                ('method', models.CharField(choices=[('momo', 'Mobile Money (MoMo)'), ('cash', 'Cash'), ('credit_card', 'Credit Card')], max_length=67, verbose_name='payment method')),
                ('action', models.CharField(choices=[('online', 'Online'), ('offline', 'Back Office')], default='offline', max_length=67, verbose_name='payment action')),
                ('status', models.CharField(choices=[('waiting', 'Waiting for confirmation'), ('confirmed', 'Confirmed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='waiting', max_length=67, verbose_name='status')),
                ('transaction_ref', models.CharField(blank=True, max_length=255, null=True, verbose_name='transaction ID')),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='payment date')),
                ('customer_ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('delivery', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('autorenewed_payment', models.BooleanField(default=False)),
                ('user_message', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ('-created',),
                'abstract': False,
                'swappable': 'GMTISP_BILLING_PAYMENT_MODEL',
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('name', models.CharField(max_length=67, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=67, verbose_name='slug')),
                ('description', models.CharField(blank=True, max_length=256, verbose_name='description')),
                ('name_for_users', models.CharField(blank=True, help_text='Friendly name for user, e.g., Plan-100MB', max_length=67, null=True, verbose_name='name for users')),
                ('price', models.DecimalField(decimal_places=2, default='0.00', help_text='If price is 0.00, it means free/bonus', max_digits=10, verbose_name='price')),
                ('starts_when', models.CharField(choices=[('assigned', 'Assigned'), ('first-auth', 'First authentication')], default='first-auth', max_length=67, verbose_name='starts when')),
                ('override_shared_users', models.CharField(default='off', max_length=67, verbose_name='override shared users')),
                ('available', models.BooleanField(db_index=True, default=False, help_text='available for purchase', verbose_name='Available:')),
                ('visible', models.BooleanField(db_index=True, default=True, help_text='Is visible in current offer', verbose_name='Visible:')),
                ('payment_required', models.BooleanField(db_index=True, default=True, help_text='require payment or not.', verbose_name='Requires payment:')),
                ('rollover_allowed', models.BooleanField(db_index=True, default=True, help_text='If true, Data purchasing now will be added to your remaining data, if you have any', verbose_name='Allow rollover:')),
                ('setup_cost', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=7, null=True, verbose_name='Plan Setup Cost')),
                ('variant', models.CharField(choices=[('Bandwidth', 'Bandwidth'), ('Data', 'Data'), ('Time', 'Time')], default='Data', max_length=16, verbose_name='Plan Variant:')),
                ('type', models.CharField(choices=[('Prepaid', 'Prepaid'), ('Postpaid', 'Postpaid')], default='Prepaid', max_length=16, verbose_name='Plan Type:')),
                ('rating', models.FloatField(blank=True, editable=False, null=True, verbose_name='Rating')),
                ('url', models.URLField(blank=True, help_text='Optional link to page with more information (for clickable plan table headers)')),
                ('default', models.BooleanField(blank=True, default=None, help_text="Both 'Unknown' and 'No' means that the plan is not default", null=True)),
            ],
            options={
                'verbose_name': 'Plan',
                'verbose_name_plural': 'Plans',
                'abstract': False,
                'swappable': 'GMTISP_BILLING_PLAN_MODEL',
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PlanQuota',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('from_time', models.TimeField(default='00:00:00')),
                ('till_time', models.TimeField(default='23:59:59')),
                ('weekdays', models.CharField(blank=True, max_length=67, null=True)),
            ],
            options={
                'verbose_name': 'Plan quota',
                'verbose_name_plural': 'Plans quotas',
                'abstract': False,
                'swappable': 'GMTISP_BILLING_PLANQUOTA_MODEL',
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Quota',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('priority', models.IntegerField(choices=[(1, 'Critical'), (2, 'High'), (3, 'Important'), (4, 'Medium'), (5, 'Low'), (6, 'Minor'), (7, 'Trivial')], default='4')),
                ('name', models.CharField(blank=True, help_text='limit-1gb', max_length=67, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('download_limit', models.BigIntegerField(default=0)),
                ('upload_limit', models.BigIntegerField(default=0)),
                ('transfer_limit', models.BigIntegerField(default=0, help_text='Total data limit, eq. 10GB')),
                ('uptime_limit', models.DurationField(blank=True, default='30 00:00:00', help_text="'00:30:00' (30 minutes), '15 00:45:00' (15 days, 0 hours, 45 minutes, and 0 seconds), 'Empty' (no expiration)", null=True)),
                ('rate_limit_rx', models.BigIntegerField(default=0)),
                ('rate_limit_tx', models.BigIntegerField(default=0)),
                ('rate_limit_min_rx', models.BigIntegerField(default=0)),
                ('rate_limit_min_tx', models.BigIntegerField(default=0)),
                ('rate_limit_priority', models.BigIntegerField(default=0)),
                ('rate_limit_burst_rx', models.BigIntegerField(default=0)),
                ('rate_limit_burst_tx', models.BigIntegerField(default=0)),
                ('rate_limit_burst_threshold_rx', models.BigIntegerField(default=0)),
                ('rate_limit_burst_threshold_tx', models.BigIntegerField(default=0)),
                ('rate_limit_burst_time_rx', models.BigIntegerField(default=0)),
                ('rate_limit_burst_time_tx', models.BigIntegerField(default=0)),
                ('reset_counters_start_time', models.DateTimeField(blank=True, null=True)),
                ('reset_counters_interval', models.CharField(choices=[('disabled', 'Disabled'), ('monthly', 'Monthly'), ('weekly', 'Weekly'), ('daily', 'Daily'), ('hourly', 'Hourly')], default='disabled', max_length=67)),
                ('is_boolean', models.BooleanField(default=False, verbose_name='is boolean')),
                ('url', models.CharField(blank=True, help_text='Optional link to page with more information (for clickable quota table headers)', max_length=200)),
            ],
            options={
                'verbose_name': 'Quota',
                'verbose_name_plural': 'Quotas',
                'abstract': False,
                'swappable': 'GMTISP_BILLING_QUOTA_MODEL',
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RecurringUserPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('token', models.CharField(blank=True, default=None, help_text='Token, that will be used for payment renewal. Depends on used payment provider', max_length=200, null=True, verbose_name='recurring token')),
                ('payment_provider', models.CharField(blank=True, default=None, help_text='Provider, that will be used for payment renewal', max_length=200, null=True, verbose_name='payment provider')),
                ('amount', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=7, null=True, verbose_name='amount')),
                ('tax', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=4, null=True, verbose_name='tax')),
                ('currency', models.CharField(max_length=3, verbose_name='currency')),
                ('renewal_triggered_by', models.IntegerField(choices=[(1, 'other'), (2, 'user'), (3, 'task')], db_index=True, default=2, help_text="The source of the associated plan's renewal (USER = user-initiated renewal, TASK = autorenew_account-task-initiated renewal, OTHER = renewal is triggered using another mechanism).", verbose_name='renewal triggered by')),
                ('_has_automatic_renewal_backup_deprecated', models.BooleanField(db_column='has_automatic_renewal', default=False, help_text='Automatic renewal is enabled for associated plan. If False, the plan renewal can be still initiated by user.', verbose_name='has automatic plan renewal')),
                ('token_verified', models.BooleanField(default=False, help_text='The recurring token has been verified by at least one payment to be working.', verbose_name='token has been verified by payment')),
                ('card_expire_year', models.IntegerField(blank=True, null=True)),
                ('card_expire_month', models.IntegerField(blank=True, null=True)),
                ('card_masked_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='CVV')),
            ],
            options={
                'abstract': False,
                'swappable': 'GMTISP_BILLING_RECURRINGUSERPLAN_MODEL',
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('expire', models.DateTimeField(blank=True, db_index=True, default=None, null=True, verbose_name='expire')),
                ('active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('status', models.CharField(blank=True, db_index=True, max_length=67, null=True, verbose_name='state')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='start time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='end time')),
            ],
            options={
                'verbose_name': 'User plan',
                'verbose_name_plural': 'Users plans',
                'abstract': False,
                'swappable': 'GMTISP_BILLING_USERPLAN_MODEL',
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
    ]
