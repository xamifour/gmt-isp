# Generated by Django 4.2 on 2024-05-31 22:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("gmtisp_billing", "0003_alter_bandwidthsettings_options_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="bandwidthsettings",
            name="burst_rate_down",
        ),
        migrations.RemoveField(
            model_name="bandwidthsettings",
            name="burst_rate_up",
        ),
        migrations.RemoveField(
            model_name="bandwidthsettings",
            name="burst_threshold_down",
        ),
        migrations.RemoveField(
            model_name="bandwidthsettings",
            name="burst_threshold_up",
        ),
        migrations.RemoveField(
            model_name="bandwidthsettings",
            name="burst_time_down",
        ),
        migrations.RemoveField(
            model_name="bandwidthsettings",
            name="burst_time_up",
        ),
        migrations.RemoveField(
            model_name="bandwidthsettings",
            name="min_rate_down",
        ),
        migrations.RemoveField(
            model_name="bandwidthsettings",
            name="min_rate_up",
        ),
        migrations.RemoveField(
            model_name="bandwidthsettings",
            name="rate_limit_down",
        ),
        migrations.RemoveField(
            model_name="bandwidthsettings",
            name="rate_limit_up",
        ),
        migrations.AddField(
            model_name="planbandwidthsettings",
            name="burst_rate_down",
            field=models.CharField(
                blank=True, max_length=64, null=True, verbose_name="Burst rate down"
            ),
        ),
        migrations.AddField(
            model_name="planbandwidthsettings",
            name="burst_rate_up",
            field=models.CharField(
                blank=True, max_length=64, null=True, verbose_name="Burst rate up"
            ),
        ),
        migrations.AddField(
            model_name="planbandwidthsettings",
            name="burst_threshold_down",
            field=models.CharField(
                blank=True,
                max_length=64,
                null=True,
                verbose_name="Burst threshold Down",
            ),
        ),
        migrations.AddField(
            model_name="planbandwidthsettings",
            name="burst_threshold_up",
            field=models.CharField(
                blank=True, max_length=64, null=True, verbose_name="Burst threshold up"
            ),
        ),
        migrations.AddField(
            model_name="planbandwidthsettings",
            name="burst_time_down",
            field=models.CharField(
                blank=True, max_length=64, null=True, verbose_name="Burst time Down"
            ),
        ),
        migrations.AddField(
            model_name="planbandwidthsettings",
            name="burst_time_up",
            field=models.CharField(
                blank=True, max_length=64, null=True, verbose_name="Burst time up"
            ),
        ),
        migrations.AddField(
            model_name="planbandwidthsettings",
            name="min_rate_down",
            field=models.CharField(
                blank=True, max_length=64, null=True, verbose_name="Min rate down"
            ),
        ),
        migrations.AddField(
            model_name="planbandwidthsettings",
            name="min_rate_up",
            field=models.CharField(
                blank=True, max_length=64, null=True, verbose_name="Min rate up"
            ),
        ),
        migrations.AddField(
            model_name="planbandwidthsettings",
            name="rate_limit_down",
            field=models.CharField(
                blank=True, max_length=64, null=True, verbose_name="Rate limit down"
            ),
        ),
        migrations.AddField(
            model_name="planbandwidthsettings",
            name="rate_limit_up",
            field=models.CharField(
                blank=True, max_length=64, null=True, verbose_name="Rate limit up"
            ),
        ),
        migrations.AlterField(
            model_name="plan",
            name="available",
            field=models.BooleanField(
                db_index=True,
                default=False,
                help_text="Is still available for purchase",
                verbose_name="Available:",
            ),
        ),
        migrations.AlterField(
            model_name="plan",
            name="customized",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="customized:",
            ),
        ),
        migrations.AlterField(
            model_name="plan",
            name="plan_class",
            field=models.CharField(
                choices=[
                    ("Bandwidth", "Bandwidth"),
                    ("Data", "Data"),
                    ("Time", "Time"),
                ],
                default="Data",
                max_length=16,
                verbose_name="Plan Class:",
            ),
        ),
        migrations.AlterField(
            model_name="plan",
            name="plan_type",
            field=models.CharField(
                choices=[("Prepaid", "Prepaid"), ("Postpaid", "Postpaid")],
                default="Prepaid",
                max_length=16,
                verbose_name="Plan Type:",
            ),
        ),
        migrations.AlterField(
            model_name="plan",
            name="requires_payment",
            field=models.BooleanField(
                db_index=True,
                default=False,
                help_text="If this flag is enabled, it means that you are required to perform a payment.",
                verbose_name="Requires payment:",
            ),
        ),
        migrations.AlterField(
            model_name="plan",
            name="rollover_allowed",
            field=models.BooleanField(
                db_index=True,
                default=True,
                help_text="Data purchasing now will be added to your remaining data, if you have any",
                verbose_name="Allow rollover:",
            ),
        ),
        migrations.AlterField(
            model_name="plan",
            name="visible",
            field=models.BooleanField(
                db_index=True,
                default=True,
                help_text="Is visible in current offer",
                verbose_name="Visible:",
            ),
        ),
    ]
