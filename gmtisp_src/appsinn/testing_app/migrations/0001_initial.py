# Generated by Django 5.1.3 on 2024-11-16 21:12

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import openwisp_users.mixins
import openwisp_utils.base
import openwisp_utils.fields
import openwisp_utils.utils
import re
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('openwisp_users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RadiusAccounting',
            fields=[
                ('id', models.BigAutoField(db_column='radacctid', primary_key=True, serialize=False)),
                ('session_id', models.CharField(db_column='acctsessionid', db_index=True, max_length=64, verbose_name='session ID')),
                ('username', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='username')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='start time')),
                ('stop_time', models.DateTimeField(blank=True, null=True, verbose_name='stop time')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('author', models.CharField(max_length=64, verbose_name='author')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization')),
            ],
            options={
                'abstract': False,
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('address', models.TextField(blank=True, null=True)),
                ('book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testing_app.book')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization')),
            ],
            options={
                'abstract': False,
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrganizationRadiusSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', openwisp_utils.fields.FallbackBooleanChoiceField(blank=True, default=None, fallback=False, null=True)),
                ('is_first_name_required', openwisp_utils.fields.FallbackCharChoiceField(blank=True, choices=[('disabled', 'Disabled'), ('allowed', 'Allowed'), ('mandatory', 'Mandatory')], fallback='disabled', max_length=32, null=True)),
                ('greeting_text', openwisp_utils.fields.FallbackCharField(blank=True, fallback='Welcome to OpenWISP!', max_length=200, null=True)),
                ('password_reset_url', openwisp_utils.fields.FallbackURLField(blank=True, fallback='http://localhost:8000/admin/password_change/', null=True)),
                ('extra_config', openwisp_utils.fields.FallbackTextField(blank=True, fallback='no data', max_length=200, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization')),
            ],
            options={
                'abstract': False,
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, openwisp_utils.base.FallbackModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('key', openwisp_utils.fields.KeyField(db_index=True, default=openwisp_utils.utils.get_random_key, help_text='unique project key', max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[^\\s/\\.]+$'), code='invalid', message='This value must not contain spaces, dots or slashes.')])),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization')),
            ],
            options={
                'abstract': False,
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('first_name', models.CharField(default='test', max_length=30)),
                ('last_name', models.CharField(default='test', max_length=30)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization')),
                ('project', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='testing_app.project')),
            ],
            options={
                'abstract': False,
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Shelf',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('books_type', models.CharField(blank=True, choices=[('HORROR', 'HORROR'), ('FANTASY', 'FANTASY'), ('FACTUAL', 'FACTUAL'), ('Mystery', 'Mystery'), ('Historical Fiction', 'Historical Fiction'), ('Literary Fiction', 'Literary Fiction'), ('Romance', 'Romance'), ('Science Fiction', 'Science Fiction'), ('Short Stories', 'Short Stories'), ('Thrillers', 'Thrillers'), ('Biographies', 'Biographies')], max_length=50, null=True, verbose_name='Type of book')),
                ('books_count', openwisp_utils.fields.FallbackPositiveIntegerField(blank=True, fallback=21, null=True, verbose_name='Number of books')),
                ('locked', models.BooleanField(default=True, verbose_name='Is locked')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner of shelf')),
            ],
            options={
                'abstract': False,
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, openwisp_utils.base.FallbackModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='book',
            name='shelf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testing_app.shelf'),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization')),
            ],
            options={
                'abstract': False,
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization')),
            ],
            options={
                'abstract': False,
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testing_app.template')),
            ],
            options={
                'abstract': False,
            },
            bases=(openwisp_users.mixins.ValidateOrgMixin, models.Model),
        ),
    ]
