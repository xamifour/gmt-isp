# Generated by Django 5.1.3 on 2024-11-16 21:12

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('openwisp_radius', '0001_initial'),
        ('openwisp_users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RegisteredUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='registered_user', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('method', models.CharField(blank=True, choices=[('', 'Unspecified'), ('manual', 'Manually created'), ('email', 'Email (No Identity Verification)'), ('mobile_phone', 'Mobile phone verification')], default='', help_text='users can sign up in different ways, some methods are valid as indirect identity verification (eg: mobile phone SIM card in most countries)', max_length=64, verbose_name='registration method')),
                ('is_verified', models.BooleanField(default=False, help_text='whether the user has completed any identity verification process sucessfully', verbose_name='verified')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='Last verification change')),
            ],
            options={
                'verbose_name': 'Registration Information',
                'verbose_name_plural': 'Registration Information',
                'abstract': False,
                'swappable': 'OPENWISP_RADIUS_REGISTEREDUSER_MODEL',
            },
        ),
        migrations.AddField(
            model_name='nas',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='organizationradiussettings',
            name='organization',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='radius_settings', to='openwisp_users.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='phonetoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='radiusaccounting',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='radiusbatch',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='radiusbatch',
            name='users',
            field=models.ManyToManyField(blank=True, help_text='List of users uploaded in this batch', related_name='radius_batch', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='radiuscheck',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='radiuscheck',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='radiusgroup',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='radiusgroupcheck',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.OPENWISP_RADIUS_RADIUSGROUP_MODEL),
        ),
        migrations.AddField(
            model_name='radiusgroupreply',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.OPENWISP_RADIUS_RADIUSGROUP_MODEL),
        ),
        migrations.AddField(
            model_name='radiuspostauth',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='radiusreply',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='radiusreply',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='radiustoken',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openwisp_users.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='radiustoken',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='radius_token', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='radiususergroup',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.OPENWISP_RADIUS_RADIUSGROUP_MODEL),
        ),
        migrations.AddField(
            model_name='radiususergroup',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='phonetoken',
            index=models.Index(fields=['user', 'created'], name='openwisp_ra_user_id_9fe207_idx'),
        ),
        migrations.AddIndex(
            model_name='phonetoken',
            index=models.Index(fields=['user', 'created', 'ip'], name='openwisp_ra_user_id_d4dd52_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='radiusbatch',
            unique_together={('name', 'organization')},
        ),
        migrations.AlterUniqueTogether(
            name='radiususergroup',
            unique_together={('user', 'group')},
        ),
    ]
